[{"F:\\reacthook\\my-app\\src\\index.js":"1","F:\\reacthook\\my-app\\src\\App.js":"2","F:\\reacthook\\my-app\\src\\reportWebVitals.js":"3","F:\\reacthook\\my-app\\src\\snakegame\\Snake.js":"4","F:\\reacthook\\my-app\\src\\components\\reacthook\\CallBackFunc.js":"5","F:\\reacthook\\my-app\\src\\components\\reacthook\\Children.js":"6"},{"size":641,"mtime":1610954340125,"results":"7","hashOfConfig":"8"},{"size":922,"mtime":1611909322896,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":7709,"mtime":1611033534702,"results":"11","hashOfConfig":"8"},{"size":393,"mtime":1611201816077,"results":"12","hashOfConfig":"8"},{"size":187,"mtime":1611201814307,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"5yybfa",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"F:\\reacthook\\my-app\\src\\index.js",[],["31","32"],"F:\\reacthook\\my-app\\src\\App.js",["33","34"],"import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react'\nimport Snake from './snakegame/Snake';\nimport CallBackFunc from './components/reacthook/CallBackFunc';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      check: true\n    }\n  }\n\n\n  componentWillMount() {\n    // alert(\"i am po\");\n  }\n\n  componentDidMount() {\n    // alert(\"component just finished mounting!\");\n  }\n\n  onClick = () => {\n    let tem = this.state.check;\n    tem = tem === true ? false : true;\n    this.setState({ check: tem })\n    //  alert(\"you are clicking!\");\n    console.log(\"click\");\n  }\n\n\n\n  render() {\n    // setTimeout(alert(\"fuckyou\"), 3000);\n\n    return (\n      <div className=\"App\">\n        <h1>I Love U</h1>\n        <button onClick={this.onClick}>Click</button>\n\n        <Snake />\n        {/* <CallBackFunc /> */}\n      </div>\n    );\n  }\n}\nexport default App;\n","F:\\reacthook\\my-app\\src\\reportWebVitals.js",[],"F:\\reacthook\\my-app\\src\\snakegame\\Snake.js",["35","36"],"import React, { Component } from 'react'\r\n\r\n\r\nclass Snake extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            snake: [{ Xpos: 1, Ypos: 1 }, { Xpos: 1, Ypos: 2 }, { Xpos: 2, Ypos: 2 }],\r\n            apple: { Xpos: 4, Ypos: 4 },\r\n            width: 400,\r\n            height: 400,\r\n            xDirect: 0,\r\n            yDirect: 0,\r\n            blockWidth: 40,\r\n            blockHeight: 40,\r\n            snakeColor: 'red',\r\n            gameLoopTimeout: 50,\r\n            directionChanged: false,\r\n            direction: 'right'\r\n        }\r\n\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    }\r\n\r\n    handleKeyDown(event) {\r\n        console.log(\"keycode:\", event.keyCode);\r\n        switch (event.keyCode) {\r\n            case 37: {\r\n                this.moveLeft();\r\n                break;\r\n            }\r\n            case 38: {\r\n                this.moveUp();\r\n                break;\r\n            }\r\n            case 39: {\r\n                this.moveRight();\r\n                break;\r\n            }\r\n            case 40: {\r\n                this.moveDown();\r\n                break;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    moveLeft = () => {\r\n        var leng = this.state.snake.length;\r\n        var temA = [];\r\n        let headerX = this.state.snake[0].Xpos;\r\n        let headerY = this.state.snake[0].Ypos;\r\n        headerX = headerX - 1;\r\n\r\n        if ((headerX === this.state.apple.Xpos) && (headerY === this.state.apple.Ypos)){console.log(\"this.hể\")\r\n            temA.push({ Xpos: headerX, Ypos: headerY });\r\n            for (let i = 0; i < leng; i++) {\r\n                temA.push(this.state.snake[i]);\r\n            }\r\n        } else {\r\n            temA.push({ Xpos: headerX, Ypos: headerY });\r\n            for (let i = 0; i < leng-1; i++) {\r\n                temA.push(this.state.snake[i]);\r\n            }\r\n        }\r\n        this.setState({ snake: temA });\r\n        this.setState({ direction: 'left' });\r\n        return;\r\n    }\r\n    moveRight = () => {\r\n        var leng = this.state.snake.length;\r\n        console.log(this.state.snake);\r\n        console.log(\"a1:\", this.state.snake[1])\r\n        var temA = [];\r\n        let headerX = this.state.snake[0].Xpos;\r\n        let headerY = this.state.snake[0].Ypos;\r\n        headerX = headerX + 1;\r\n\r\n        if ((headerX === this.state.apple.Xpos) && (headerY === this.state.apple.Ypos)){console.log(\"this.hể\")\r\n            temA.push({ Xpos: headerX, Ypos: headerY });\r\n            for (let i = 0; i < leng; i++) {\r\n                temA.push(this.state.snake[i]);\r\n            }\r\n        } else {\r\n            temA.push({ Xpos: headerX, Ypos: headerY });\r\n            for (let i = 0; i < leng-1; i++) {\r\n                temA.push(this.state.snake[i]);\r\n            }\r\n        }\r\n        console.log(\"temA:\", temA)\r\n        this.setState({ snake: temA });\r\n        this.setState({ direction: 'right' });\r\n        return;\r\n    }\r\n    moveUp = () => {\r\n        var leng = this.state.snake.length;\r\n        var temA = [];\r\n        let headerX = this.state.snake[0].Xpos;\r\n        let headerY = this.state.snake[0].Ypos;\r\n        headerY = headerY - 1;\r\n\r\n        if ((headerX === this.state.apple.Xpos) && (headerY === this.state.apple.Ypos)) {\r\n            console.log(\"this.hê\")\r\n            temA.push({ Xpos: headerX, Ypos: headerY });\r\n            for (let i = 0; i < leng; i++) {\r\n                temA.push(this.state.snake[i]);\r\n            }\r\n        } else {\r\n\r\n            temA.push({ Xpos: headerX, Ypos: headerY });\r\n            for (let i = 0; i < leng-1; i++) {\r\n                temA.push(this.state.snake[i]);\r\n            }\r\n        }\r\n        this.setState({ snake: temA });\r\n        this.setState({ direction: 'up' });\r\n        return;\r\n    }\r\n    moveDown = () => {\r\n        var leng = this.state.snake.length;\r\n        var temA = [];\r\n        let headerX = this.state.snake[0].Xpos;\r\n        let headerY = this.state.snake[0].Ypos;\r\n        headerY = headerY + 1;\r\n\r\n        if ((headerX === this.state.apple.Xpos) && (headerY === this.state.apple.Ypos)) {\r\n            console.log(\"this.hê\")\r\n            temA.push({ Xpos: headerX, Ypos: headerY });\r\n            for (let i = 0; i < leng; i++) {\r\n                temA.push(this.state.snake[i]);\r\n            }\r\n        } else {\r\n\r\n            temA.push({ Xpos: headerX, Ypos: headerY });\r\n            for (let i = 0; i < leng-1; i++) {\r\n                temA.push(this.state.snake[i]);\r\n            }\r\n        }\r\n\r\n        this.setState({ snake: temA });\r\n        this.setState({ direction: 'down' });\r\n        return;\r\n    }\r\n\r\n\r\n    handleClick = id => {\r\n        console.log(id);\r\n    }\r\n\r\n    sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n        this.gameLoop();\r\n    }\r\n\r\n    gameLoop() {\r\n        setTimeout(() => {\r\n            this.moveSnake()\r\n            this.setState({ directionChanged: false })\r\n            this.gameLoop();\r\n        }, 1000);\r\n    }\r\n\r\n    moveSnake() {\r\n\r\n        switch (this.state.direction) {\r\n            case 'left': { this.moveLeft(); break; }\r\n            case 'right': { this.moveRight(); break; }\r\n            case 'up': { this.moveUp(); break; }\r\n            case 'down': { this.moveDown(); break; }\r\n        }\r\n        // this.moveRight();\r\n\r\n        // this.moveDown();\r\n        // this.moveLeft();\r\n        // this.moveUp();\r\n    }\r\n\r\n    initGame() {\r\n\r\n    }\r\n\r\n    // moved head\r\n    moveHead() {\r\n        switch (this.state.direction) {\r\n            case 'left':\r\n                this.moveHeadLeft()\r\n                break\r\n            case 'up':\r\n                this.moveHeadUp()\r\n                break\r\n            case 'right':\r\n                this.moveHeadRight()\r\n                break\r\n            default:\r\n                this.moveHeadDown()\r\n        }\r\n    }\r\n\r\n    drawHeadSnake = () => {\r\n        const canvas = this.refs.canvas;\r\n        console.log(\"context:\", canvas.getContext(\"2d\"));\r\n        var ctx = canvas.getContext(\"2d\");\r\n        return (\r\n            ctx.fillRect(9 * 40, 1 * 40, 40, 40)\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                id='GameBoard'\r\n                style={{\r\n                    width: this.state.width,\r\n                    height: this.state.height,\r\n                    borderWidth: this.state.width / 50,\r\n                    border: 'solid'\r\n                }}\r\n            >\r\n                {this.state.snake.map((snakePart, index) => {\r\n                    return (\r\n                        <div\r\n                            key={index}\r\n                            className='Block'\r\n                            style={{\r\n                                width: this.state.blockWidth,\r\n                                height: this.state.blockHeight,\r\n                                left: snakePart.Xpos * 40,\r\n                                top: snakePart.Ypos * 40,\r\n                                background: this.state.snakeColor,\r\n                            }}\r\n                        />\r\n                    )\r\n                })}\r\n\r\n\r\n                <div\r\n                    className='Block'\r\n                    style={{\r\n                        width: this.state.blockWidth,\r\n                        height: this.state.blockHeight,\r\n                        left: this.state.apple.Xpos * 40,\r\n                        top: this.state.apple.Ypos * 40,\r\n                        background: 'green',\r\n                    }}\r\n                />\r\n                    )\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Snake;","F:\\reacthook\\my-app\\src\\components\\reacthook\\CallBackFunc.js",["37"],"import React from 'react'\r\nimport ChildrenFunc from './Children';\r\n\r\nvar beep = (param) =>{\r\n    console.log(\"fuckyou\", param);\r\n    t = param;\r\n    return param;\r\n}\r\n\r\nvar t = \"\";\r\n\r\nconst CallBackFunc = (props) =>{\r\n\r\n    \r\n\r\n    return(\r\n        <h1>\r\n            t\r\n            hello po\r\n            <ChildrenFunc func={beep} />\r\n        </h1>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default CallBackFunc;","F:\\reacthook\\my-app\\src\\components\\reacthook\\Children.js",[],["38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":8,"nodeType":"46","messageId":"47","endLine":1,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":5,"column":8,"nodeType":"46","messageId":"47","endLine":5,"endColumn":20},{"ruleId":"49","severity":1,"message":"50","line":28,"column":9,"nodeType":"51","messageId":"52","endLine":46,"endColumn":10},{"ruleId":"49","severity":1,"message":"50","line":170,"column":9,"nodeType":"51","messageId":"52","endLine":175,"endColumn":10},{"ruleId":"44","severity":1,"message":"53","line":10,"column":5,"nodeType":"46","messageId":"47","endLine":10,"endColumn":6},{"ruleId":"40","replacedBy":"54"},{"ruleId":"42","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'CallBackFunc' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'t' is assigned a value but never used.",["56"],["57"],"no-global-assign","no-unsafe-negation"]